Установка minikube
Установка Docker
Установка kubectl
Запуск minikube c --driver=docker
Добаваление пользователя в группу docker

Основные комманды для minikube:
	
minikube image ls --format table - вывессти список images в виде таблички
minikube image build . -t [imageNage]:[tag] - билд image с именем и тегом с Dockerfile

Основные команды kubectl

kubectl get pod - получить список pods
kubectl get rs - получить список replicaset
kubectl get deploy - получить список deployments
kubectl get service - получить список services
kubectl get cm - получить список configMaps
kubectl get secret - получить список secrets

kubectl describe [pod, rs, deploy, service, cm, secret] [name] - получить поное описание pod или								    
									     rs или 
									     deploy или
									     service или 
									     cm или
									     secret
kubectl create -f [pathToFile.yaml] - создать абстракцию описанную в pathToFile.yaml
kubectl apply -f [pathToFile.yaml] - создать или обновить абстракцию описанную в pathToFile.yaml
kubectl get pod -w - покажет текущее состяние pod онлайн, и будет его онлайн отслеживать(-w сокращение от watch)

kubectl port-forward [deploymentName] [hostPort]:[appPort] - прокинуть порт приложения на host(локальную машину)
kubectl expose deployment [deploymentName] --port 80 - создать svc и прокинуть порт 80 на порт 80
kubectl autoscale deployment [deploymentName] --cpu-percent=50 --min=1 --max=5 - задать HPA с условием по CPU 
										и ограничением на колличесво POD (min, max)

---------------
Необходимо разобраться с:
	configMap, secret - средства для настроек, переменных среды и хранения секретов(пароли, пользователи)
			    а так же, как их внедрять и подменять
	persistenVolumeClaim, volume, volumeMount и т.д. - средства для монтирования дискового пространства,
							 и его связь с системами хранения данных(и что это вообще такое 
											- система хранения данных)

Probes - это проверка исправности работы приложения
	Три вида:
	- Liveness Probe:
		Контроль за состаянием приложения во время его жизни
		Исполняется постоянно
	- Readness Probe:
		Проверяет, готово ли приложение принимать трафик
		В случае неудачного выполнения приложение убирается из балансировки
		Исполняется постоянно
	- Startup Probe
		Проверяет, запустилось ли приложение
		Используется при старте
