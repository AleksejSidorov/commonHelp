Cluster состоит из следующих компонентов:
Обязательные для запуска:
	Etcd
	API server
	Controller-manager
	Scheduler
	Kubelet
	Kube-proxy
	
И компоненты, без которых Cluster запуститься, 
   но его не получиться использовать. А так же у них может быть 
   вариативность разных реализаций:
	Контейнеризация
	Сеть
	DNS
	
Etcd - база данных кластера типа key-value на протоколе raft,
	Хранит всю информацию о кластере.
	Используется сразу три(очень редко пять) нод для устойчивости
	Относиться к мастер ноде.
	
API server - центральный компонент Kubernetes
 		Единственный взаимодействует с Etcd
 		Работает по REST API
		Когда мы через kubectl делаем запросы(типа kubectl get pod) 
		то как раз таки отправляем http запрос в API server
		Так же, все компоненты кластера берут инфу из API server, 
		и обращаются к Etcd через API server.
		Является stateless. 
		Authentication и Authorization то же прохожит через API server
		Относиться к мастер ноде.
		
Controller-manager - Начинает создание и отслеживает жизнь расзличных абстракций скластера(replicaSet, node и т.д.)
		     Относиться к мастер ноде.
			Набор контроллеров:
			-Node controller
			-Replicaset controller
			-Endpoinnts controller
			-И другие..
			
			GarbageCollector - сборщик мусора
			
Scheduler - Продолжает создание - назначает ноды на поды. Дописывает необходимые сведения в Etcd через API Server, 
		о том, на какоих нодах будут поды.
		Назначение подов происходит в зависимости от:
		QoS - Quality of Service (В зависимости от ресурсов на ноде)
		Affinity/anti-affinity - правила указанные пользователем где и сколько запускать
		Requested resources - в зависимости от баланса подов на нодах
		Priority Class - правила, какие поды более приоритетные
		Относиться к мастер ноде.

Kubelet - Относиться и к worker и к master node. Работает не в контейнере, а как отдельный процесс.
		Он отдаёт команды docker демону на создание и остановку контейнеров, подов, сеть в подах.
		Выполняет проверки Probe. Отправляет в API server данные о жизни и ресурсах о ноде.
		
Kube-proxy - занимается сетевыми обстракций, но не самой реализациями.
		Смотрит в Kube-API
		Занимается правилами и самой IP Tables
		В общем - занимается объектом Service
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
			

